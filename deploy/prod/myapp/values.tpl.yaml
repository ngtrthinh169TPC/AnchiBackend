# Default values for myapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: ${IMAGE_REPOSITORY}
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ${TAG}
healthcheck:
  livenessProbe:
    httpGet:
      path: /
      port: http
    periodSeconds: 5
    initialDelaySeconds: 20
  readinessProbe:
    httpGet:
      path: /
      port: http
    periodSeconds: 5
    initialDelaySeconds: 30
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: ${PORT}

ingress:
  enabled: false

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 10m
    memory: 64Mi

autoscaling:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}

sish-client:
  dns_resolver:
    enabled: false
  enabled: ${SISH_ENABLED}
  image:
    repository: kroniak/ssh-client
    tag: latest
  service:
    name: ssh-tunnel
  services:
    sish:
      domain: ${DOMAIN}
      port: 22222
      request:
        domain: ${SUB_DOMAIN}
        port: 80
      from:
        domain: ${FROM_DOMAIN}
        port: ${FROM_PORT}

postgresql:
  enabled: ${DB_ENABLED}
  auth:
    postgresqlPassword: ${DB_PASS}
    enablePostgresUser: true
    username: ${DB_USER}
    password: ${DB_PASS}
    database: ${DB_NAME}
  primary:
    livenessProbe:
      enabled: true
    readinessProbe:
      enabled: true
    startupProbe:
      enabled: false
    resources:
      requests:
        cpu: 20m
        memory: 128Mi
    service:
      ports:
        postgresql: ${DB_PORT}
    persistence:
      enabled: true

# sish-postgres-client:
#   dns_resolver:
#     enabled: false
#   enabled: ${SISH_DB_ENABLED}
#   service:
#     name: postgres-ssh-tunnel
#   services:
#     sish:
#       domain: ${DOMAIN}
#       port: ${SSH_PORT}
#       request:
#         # domain: ${SUB_DOMAIN}
#         port: 5432
#       from:
#         domain: cookie-be-postgesql
#         port: 5432